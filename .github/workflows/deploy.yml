name: Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  deploy-to-aks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        run: |
          # Install Azure CLI on Ubuntu runner
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version  # Optional: just to verify that Azure CLI is installed correctly

      - name: Authenticate to Azure using Access Token
        env:
          AZURE_ACCESS_TOKEN: ${{ secrets.AZURE_ACCESS_TOKEN }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          # Save the access token temporarily
          echo "$AZURE_ACCESS_TOKEN" > /tmp/azure_access_token

          # Set the subscription explicitly
          az account set --subscription "$AZURE_SUBSCRIPTION_ID"

          # Authenticate using the access token
          ACCESS_TOKEN=$(cat /tmp/azure_access_token)

          # Set up access with the token
          az rest --method POST \
                  --url "https://management.azure.com/subscriptions/$AZURE_SUBSCRIPTION_ID/providers/Microsoft.ContainerService/managedClusters/eShopCluster/listClusterAdminCredential?api-version=2022-03-01" \
                  --headers "Authorization=Bearer $ACCESS_TOKEN"

      - name: Get AKS Credentials
        env:
          AZURE_ACCESS_TOKEN: ${{ secrets.AZURE_ACCESS_TOKEN }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          # Use the access token to obtain the AKS credentials
          ACCESS_TOKEN=$(cat /tmp/azure_access_token)
          az aks get-credentials --resource-group eShopResourceGroup --name eShopCluster --admin --overwrite-existing
          
          # Optionally verify that credentials were set correctly by listing cluster nodes
          az aks list -o table

      # Example deployment step to deploy the application
      # Uncomment this block to actually deploy resources
      # - name: Deploy to AKS
      #   run: |
      #     kubectl apply -f deployment.yaml

